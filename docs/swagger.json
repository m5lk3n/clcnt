{
    "swagger": "2.0",
    "info": {
        "description": "This is the clcnt API server.",
        "title": "clcnt API",
        "contact": {
            "name": "clcnt API Support",
            "url": "https://github.com/m5lk3n/clcnt"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/m5lk3n/clcnt/blob/main/LICENSE"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/v1/calories": {
            "get": {
                "description": "returns today's sum of calories (if 1 day was specific) or the average for the amount of given days",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "handler to retrieve calories",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "recent day(s) to retrieve calories for",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/entry": {
            "get": {
                "description": "returns all food entries with calories and timestamp, there's neither filtering nor pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "handler to retrieve all entries",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/entry/{food}/{calories}": {
            "post": {
                "description": "adds an entry with the given food and calories with the current Unix timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "handler to add an entry with calories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "single word that describes the food (allowed characters are URL path entries/SQLite strings)",
                        "name": "food",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "amount of calories",
                        "name": "calories",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/healthy": {
            "get": {
                "description": "always indicates that the API server is alive, consider using readiness handler instead",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "liveness handler",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "indicates whether or not the API server and its database are ready",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "readiness handler",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        }
    }
}